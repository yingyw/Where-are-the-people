/**
 * Yingying Wang (yingyw)
 * Xiaoyan Chen(h13579)
 * CSE332 Projects 3
 */
// A class to represent a Rectangle
// You do not have to use this, but it's quite convenient
/**
 * 
 * This class is Rectangle object includes left,right,top,bottom boundaries and
 * population inside boundaries
 * 
 */
public class Rectangle {
	// invariant: right >= left and top >= bottom (i.e., numbers get bigger as
	// you move up/right)
	// note in our census data longitude "West" is a negative number which
	// nicely matches bigger-to-the-right
	public float left;
	public float right;
	public float top;
	public float bottom;
	public int population;

	public Rectangle(float l, float r, float t, float b) {
		left = l;
		right = r;
		top = t;
		bottom = b;
	}

	public Rectangle(float l, float r, float t, float b, int p) {
		left = l;
		right = r;
		top = t;
		bottom = b;
		population = p;
	}

	public Rectangle(int p) {
		population = p;
	}

	// a functional operation: returns a new Rectangle that is the smallest
	// rectangle
	// containing this and that
	public Rectangle encompass(Rectangle that) {
		return new Rectangle(Math.min(this.left, that.left), Math.max(
				this.right, that.right), Math.max(this.top, that.top),
				Math.min(this.bottom, that.bottom));
	}

	public Rectangle addPopulation(Rectangle that) {
		return new Rectangle(this.population + that.population);
	}

	public String toString() {
		return "[left=" + left + " right=" + right + " top=" + top + " bottom="
				+ bottom + " population= " + population + "]";
	}
}